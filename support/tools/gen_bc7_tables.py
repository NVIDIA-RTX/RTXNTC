#!/usr/bin/python

# SPDX-FileCopyrightText: Copyright (c) 2023-2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: LicenseRef-NvidiaProprietary
#
# NVIDIA CORPORATION, its affiliates and licensors retain all intellectual
# property and proprietary rights in and to this material, related
# documentation and any modifications thereto. Any use, reproduction,
# disclosure or distribution of this material and related documentation
# without an express license agreement from NVIDIA CORPORATION or
# its affiliates is strictly prohibited.

partitions2 = [
    [ 0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1 ],
    [ 0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1 ],
    [ 0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1 ],
    [ 0,0,0,1,0,0,1,1,0,0,1,1,0,1,1,1 ],
    [ 0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,1 ],
    [ 0,0,1,1,0,1,1,1,0,1,1,1,1,1,1,1 ],
    [ 0,0,0,1,0,0,1,1,0,1,1,1,1,1,1,1 ],
    [ 0,0,0,0,0,0,0,1,0,0,1,1,0,1,1,1 ],
    [ 0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1 ],
    [ 0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1 ],
    [ 0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1 ],
    [ 0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1 ],
    [ 0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1 ],
    [ 0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1 ],
    [ 0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1 ],
    [ 0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1 ],
    [ 0,0,0,0,1,0,0,0,1,1,1,0,1,1,1,1 ],
    [ 0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0 ],
    [ 0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0 ],
    [ 0,1,1,1,0,0,1,1,0,0,0,1,0,0,0,0 ],
    [ 0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0 ],
    [ 0,0,0,0,1,0,0,0,1,1,0,0,1,1,1,0 ],
    [ 0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0 ],
    [ 0,1,1,1,0,0,1,1,0,0,1,1,0,0,0,1 ],
    [ 0,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0 ],
    [ 0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0 ],
    [ 0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0 ],
    [ 0,0,1,1,0,1,1,0,0,1,1,0,1,1,0,0 ],
    [ 0,0,0,1,0,1,1,1,1,1,1,0,1,0,0,0 ],
    [ 0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0 ],
    [ 0,1,1,1,0,0,0,1,1,0,0,0,1,1,1,0 ],
    [ 0,0,1,1,1,0,0,1,1,0,0,1,1,1,0,0 ],
    [ 0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1 ],
    [ 0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1 ],
    [ 0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0 ],
    [ 0,0,1,1,0,0,1,1,1,1,0,0,1,1,0,0 ],
    [ 0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0 ],
    [ 0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0 ],
    [ 0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1 ],
    [ 0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1 ],
    [ 0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0 ],
    [ 0,0,0,1,0,0,1,1,1,1,0,0,1,0,0,0 ],
    [ 0,0,1,1,0,0,1,0,0,1,0,0,1,1,0,0 ],
    [ 0,0,1,1,1,0,1,1,1,1,0,1,1,1,0,0 ],
    [ 0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0 ],
    [ 0,0,1,1,1,1,0,0,1,1,0,0,0,0,1,1 ],
    [ 0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1 ],
    [ 0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0 ],
    [ 0,1,0,0,1,1,1,0,0,1,0,0,0,0,0,0 ],
    [ 0,0,1,0,0,1,1,1,0,0,1,0,0,0,0,0 ],
    [ 0,0,0,0,0,0,1,0,0,1,1,1,0,0,1,0 ],
    [ 0,0,0,0,0,1,0,0,1,1,1,0,0,1,0,0 ],
    [ 0,1,1,0,1,1,0,0,1,0,0,1,0,0,1,1 ],
    [ 0,0,1,1,0,1,1,0,1,1,0,0,1,0,0,1 ],
    [ 0,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0 ],
    [ 0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,0 ],
    [ 0,1,1,0,1,1,0,0,1,1,0,0,1,0,0,1 ],
    [ 0,1,1,0,0,0,1,1,0,0,1,1,1,0,0,1 ],
    [ 0,1,1,1,1,1,1,0,1,0,0,0,0,0,0,1 ],
    [ 0,0,0,1,1,0,0,0,1,1,1,0,0,1,1,1 ],
    [ 0,0,0,0,1,1,1,1,0,0,1,1,0,0,1,1 ],
    [ 0,0,1,1,0,0,1,1,1,1,1,1,0,0,0,0 ],
    [ 0,0,1,0,0,0,1,0,1,1,1,0,1,1,1,0 ],
    [ 0,1,0,0,0,1,0,0,0,1,1,1,0,1,1,1 ]
]

partitions3 = [
    [ 0,0,1,1,0,0,1,1,0,2,2,1,2,2,2,2 ],
    [ 0,0,0,1,0,0,1,1,2,2,1,1,2,2,2,1 ],
    [ 0,0,0,0,2,0,0,1,2,2,1,1,2,2,1,1 ],
    [ 0,2,2,2,0,0,2,2,0,0,1,1,0,1,1,1 ],
    [ 0,0,0,0,0,0,0,0,1,1,2,2,1,1,2,2 ],
    [ 0,0,1,1,0,0,1,1,0,0,2,2,0,0,2,2 ],
    [ 0,0,2,2,0,0,2,2,1,1,1,1,1,1,1,1 ],
    [ 0,0,1,1,0,0,1,1,2,2,1,1,2,2,1,1 ],
    [ 0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2 ],
    [ 0,0,0,0,1,1,1,1,1,1,1,1,2,2,2,2 ],
    [ 0,0,0,0,1,1,1,1,2,2,2,2,2,2,2,2 ],
    [ 0,0,1,2,0,0,1,2,0,0,1,2,0,0,1,2 ],
    [ 0,1,1,2,0,1,1,2,0,1,1,2,0,1,1,2 ],
    [ 0,1,2,2,0,1,2,2,0,1,2,2,0,1,2,2 ],
    [ 0,0,1,1,0,1,1,2,1,1,2,2,1,2,2,2 ],
    [ 0,0,1,1,2,0,0,1,2,2,0,0,2,2,2,0 ],
    [ 0,0,0,1,0,0,1,1,0,1,1,2,1,1,2,2 ],
    [ 0,1,1,1,0,0,1,1,2,0,0,1,2,2,0,0 ],
    [ 0,0,0,0,1,1,2,2,1,1,2,2,1,1,2,2 ],
    [ 0,0,2,2,0,0,2,2,0,0,2,2,1,1,1,1 ],
    [ 0,1,1,1,0,1,1,1,0,2,2,2,0,2,2,2 ],
    [ 0,0,0,1,0,0,0,1,2,2,2,1,2,2,2,1 ],
    [ 0,0,0,0,0,0,1,1,0,1,2,2,0,1,2,2 ],
    [ 0,0,0,0,1,1,0,0,2,2,1,0,2,2,1,0 ],
    [ 0,1,2,2,0,1,2,2,0,0,1,1,0,0,0,0 ],
    [ 0,0,1,2,0,0,1,2,1,1,2,2,2,2,2,2 ],
    [ 0,1,1,0,1,2,2,1,1,2,2,1,0,1,1,0 ],
    [ 0,0,0,0,0,1,1,0,1,2,2,1,1,2,2,1 ],
    [ 0,0,2,2,1,1,0,2,1,1,0,2,0,0,2,2 ],
    [ 0,1,1,0,0,1,1,0,2,0,0,2,2,2,2,2 ],
    [ 0,0,1,1,0,1,2,2,0,1,2,2,0,0,1,1 ],
    [ 0,0,0,0,2,0,0,0,2,2,1,1,2,2,2,1 ],
    [ 0,0,0,0,0,0,0,2,1,1,2,2,1,2,2,2 ],
    [ 0,2,2,2,0,0,2,2,0,0,1,2,0,0,1,1 ],
    [ 0,0,1,1,0,0,1,2,0,0,2,2,0,2,2,2 ],
    [ 0,1,2,0,0,1,2,0,0,1,2,0,0,1,2,0 ],
    [ 0,0,0,0,1,1,1,1,2,2,2,2,0,0,0,0 ],
    [ 0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,0 ],
    [ 0,1,2,0,2,0,1,2,1,2,0,1,0,1,2,0 ],
    [ 0,0,1,1,2,2,0,0,1,1,2,2,0,0,1,1 ],
    [ 0,0,1,1,1,1,2,2,2,2,0,0,0,0,1,1 ],
    [ 0,1,0,1,0,1,0,1,2,2,2,2,2,2,2,2 ],
    [ 0,0,0,0,0,0,0,0,2,1,2,1,2,1,2,1 ],
    [ 0,0,2,2,1,1,2,2,0,0,2,2,1,1,2,2 ],
    [ 0,0,2,2,0,0,1,1,0,0,2,2,0,0,1,1 ],
    [ 0,2,2,0,1,2,2,1,0,2,2,0,1,2,2,1 ],
    [ 0,1,0,1,2,2,2,2,2,2,2,2,0,1,0,1 ],
    [ 0,0,0,0,2,1,2,1,2,1,2,1,2,1,2,1 ],
    [ 0,1,0,1,0,1,0,1,0,1,0,1,2,2,2,2 ],
    [ 0,2,2,2,0,1,1,1,0,2,2,2,0,1,1,1 ],
    [ 0,0,0,2,1,1,1,2,0,0,0,2,1,1,1,2 ],
    [ 0,0,0,0,2,1,1,2,2,1,1,2,2,1,1,2 ],
    [ 0,2,2,2,0,1,1,1,0,1,1,1,0,2,2,2 ],
    [ 0,0,0,2,1,1,1,2,1,1,1,2,0,0,0,2 ],
    [ 0,1,1,0,0,1,1,0,0,1,1,0,2,2,2,2 ],
    [ 0,0,0,0,0,0,0,0,2,1,1,2,2,1,1,2 ],
    [ 0,1,1,0,0,1,1,0,2,2,2,2,2,2,2,2 ],
    [ 0,0,2,2,0,0,1,1,0,0,1,1,0,0,2,2 ],
    [ 0,0,2,2,1,1,2,2,1,1,2,2,0,0,2,2 ],
    [ 0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,2 ],
    [ 0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,1 ],
    [ 0,2,2,2,1,2,2,2,0,2,2,2,1,2,2,2 ],
    [ 0,1,0,1,2,2,2,2,2,2,2,2,2,2,2,2 ],
    [ 0,1,1,1,2,0,1,1,2,2,0,1,2,2,2,0 ],
]


def processPartitionList(lst, numSubsets):
    for subset in range(numSubsets):
        print(f'static const uint c_Partitions{numSubsets}_Subset{subset}[{len(lst)}] = {{')
        partitionIdx = 0
        for partition in lst:
            value = 0
            for idx in range(16):
                if partition[idx] == subset:
                    value = value | (1 << idx)
            print(f'{"    " if partitionIdx % 8 == 0 else ""}0x{value:04x}{", " if partitionIdx < 63 else ""}', end='' if partitionIdx % 8 < 7 else '\n')
            partitionIdx += 1
        print('};\n')

processPartitionList(partitions2, 2)
processPartitionList(partitions3, 3)